#! /bin/bash
#-----------------------------------------------------------------------------
#--  Usage:

if [ "$(dirname "$0")" != "." ]; then
   echo "Please run './configure' from '$(dirname "$0")/'." 1>&2
   exit 1
fi

#-----------------------------------------------------------------------------
#--  Check stored configuration:

function generate_config_script() {
   (
      echo "# Generated file.  Please modify '.config' and run './configure' to update."
      perl -lpe 's|^(.+=)|export $1|;
                 s|^export (export )+|export |;
                 s|=([^"])|="$1|;
                 s|([^"])$|$1"|;' .config
   ) > .config.sh
   touch --reference=.config .config.sh
}

if [ -r .config ]; then
   generate_config_script
   source .config.sh
   cp -p .config .config.old
fi

#-----------------------------------------------------------------------------
#--  Distribution:

if [ -z "${DISTRIBUTION}" ]; then
   DISTRIBUTION="$(if [ -r "/etc/lsb-release" ]; then
                      source "/etc/lsb-release"
                      echo $DISTRIB_DESCRIPTION
                   elif [ -r "/etc/debian_version" ]; then
                      echo -n "Debian "
                      cat "/etc/debian_version"
                   else
                      echo "unknown"
                   fi)"

   echo "Guessed 'DISTRIBUTION' to be '${DISTRIBUTION}'."
   echo "If this is incorrect, please modify '.config' accordingly."
fi

echo "export DISTRIBUTION=${DISTRIBUTION}" >> .config

#-----------------------------------------------------------------------------
#--  Gnatmake arguments:

if [ -z "${GNATMAKE_ARGS}" ]; then
   GNATMAKE_ARGS="-gnat05 -gnatyO -gnatE -gnato -gnatv -gnati1 -gnatf -gnatn -fstack-check -gnatyO -m"

   echo "Set 'GNATMAKE_ARGS' to '${GNATMAKE_ARGS}'."
   echo "If this is incorrect, please modify '.config' accordingly."
fi

echo "export GNATMAKE_ARGS=${GNATMAKE_ARGS}" >> .config

#-----------------------------------------------------------------------------
#--  Installation prefix:

if [ -z "${PREFIX}" ]; then
   PREFIX="/usr/local"

   echo "Set 'PREFIX' to '${PREFIX}'."
   echo "If this is incorrect, please modify '.config' accordingly."
fi

echo "export PREFIX=${PREFIX}" >> .config

#-----------------------------------------------------------------------------
#--  Device names:

if [ -z "${FORCEPLATE_DEVICE}" ]; then
   FORCEPLATE_DEVICE="/dev/ttyUSB0"

   echo "Set 'FORCEPLATE_DEVICE' to '${FORCEPLATE_DEVICE}'."
   echo "If this is incorrect, please modify '.config' accordingly."
fi

if [ -z "${ACCELEROMETER_DEVICE}" ]; then
   ACCELEROMETER_DEVICE="/dev/ttyUSB1"

   echo "Set 'ACCELEROMETER_DEVICE' to '${ACCELEROMETER_DEVICE}'."
   echo "If this is incorrect, please modify '.config' accordingly."
fi

echo "export FORCEPLATE_DEVICE=${FORCEPLATE_DEVICE}" >> .config
echo "export ACCELEROMETER_DEVICE=${ACCELEROMETER_DEVICE}" >> .config

#-----------------------------------------------------------------------------
#--  Image dimensions:

if [ -z "${IMAGE_WIDTH}" ]; then
   IMAGE_WIDTH=282

   echo "Set 'IMAGE_WIDTH' to '${IMAGE_WIDTH}'."
   echo "If this is incorrect, please modify '.config' accordingly."
fi

if [ -z "${IMAGE_HEIGHT}" ]; then
   IMAGE_HEIGHT=376

   echo "Set 'IMAGE_HEIGHT' to '${IMAGE_HEIGHT}'."
   echo "If this is incorrect, please modify '.config' accordingly."
fi

echo "export IMAGE_WIDTH=${IMAGE_WIDTH}" >> .config
echo "export IMAGE_HEIGHT=${IMAGE_HEIGHT}" >> .config

#-----------------------------------------------------------------------------
#--  Video buffer name:

if [ -z "${VIDEO_BUFFER_NAME}" ]; then
   VIDEO_BUFFER_NAME=.koparo.video_buffer

   echo "Set 'VIDEO_BUFFER_NAME' to '${VIDEO_BUFFER_NAME}'."
   echo "If this is incorrect, please modify '.config' accordingly."
fi

echo "export VIDEO_BUFFER_NAME=${VIDEO_BUFFER_NAME}" >> .config

#-----------------------------------------------------------------------------
#--  Clean up config file:

buffer="$(mktemp ".config-XXXXXX")"

for key in $(sed 's:^export ::' .config | cut -d= -f1 | sort -u); do
   grep "^export ${key}=" .config | tail -n1
done \
  | perl -lpe 's|="|=|; s|"$||' \
  > "${buffer}"

mv "${buffer}" .config

if [ ! -r .config.old ]; then
   true
elif diff --brief .config .config.old 1>/dev/null; then
   mv .config.old .config
else
   rm .config.old
fi

generate_config_script

#-----------------------------------------------------------------------------
